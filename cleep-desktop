#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import subprocess
import os
import signal
import time
import logging

logging.basicConfig(level=logging.DEBUG, format='%(asctime)s %(name)s.%(funcName)s +%(lineno)s: %(levelname)-8s [%(process)d] %(message)s')
logger = logging.getLogger('Cleep-desktop')

#launch processes
logger.debug('Launch processes')
rpc = subprocess.Popen(['python3', 'rpcserver.py'])
ui = subprocess.Popen(['python3', 'ui.py'])

try:
    while True:
        #check processes status
        rpc.poll()
        ui.poll()

        if rpc.returncode is None and ui.returncode is None:
            #processes not terminated
            time.sleep(0.5)

        else:
            #one of processes if terminated, stop program
            logger.info('One of process is terminated. Stop application')
            break

except:
    #stop program when exception occured
    logger.exception('Internal error. Stop application')

#clean everything
if ui:
    try:
        os.kill(ui.pid, signal.SIGTERM)
    except:
        pass
if rpc:
    try:
        os.kill(rpc.pid, signal.SIGTERM)
    except:
        pass

logger.info('Cleep-desktop terminated')

